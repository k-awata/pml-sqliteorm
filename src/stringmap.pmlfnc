-- Copyright (c) 2022 K.Awata
-- 
-- Permission is hereby granted, free of charge, to any person obtaining a copy
-- of this software and associated documentation files (the "Software"), to deal
-- in the Software without restriction, including without limitation the rights
-- to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-- copies of the Software, and to permit persons to whom the Software is
-- furnished to do so, subject to the following conditions:
-- 
-- The above copyright notice and this permission notice shall be included in all
-- copies or substantial portions of the Software.
-- 
-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-- AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-- OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-- SOFTWARE.

-- Function !!stringmap converts JSON that must have string keys and
-- string values or number values only to STRINGMAP.
define function !!stringmap(!json is STRING) is STRINGMAP
    !record = object STRINGMAP()
    !inBraces = false
    !inQuotes = false
    !key = ''
    !strbuf = ''
    !numbuf = ''
    do !i to !json.Length()
        !char = !json.Substring(!i, 1)
        -- Skip until { comming
        if not !inBraces then
            if !char eq '{' then
                !inBraces = true
            endif
            skip
        endif
        -- Throw error if last character isn't }
        if !i eq !json.Length() and !char ne '}' then
            return error 1 'JSON parse error: unexpected end of string'
        endif
        -- Process in quotes mode
        if !inQuotes then
            if !char eq '\' then
                if !json.Substring(!i - 1, 1) eq '\' then
                    !strbuf = !strbuf + '\'
                endif
            elseif !char eq |"| then
                if !json.Substring(!i - 1, 1) eq '\' then
                    !strbuf = !strbuf + |"|
                else
                    !inQuotes = false
                endif
            else
                !strbuf = !strbuf + !char
            endif
            skip
        endif
        if !char eq ':' then
            -- Decide key if : comming
            if !key ne '' or !strbuf eq '' then
                return error 2 'JSON parse error: unexpected token :'
            endif
            !key = !strbuf
            !strbuf = ''
        elseif !char eq |"| then
            -- Enter in quotes mode
            if !strbuf ne '' or !numbuf ne '' then
                return error 3 'JSON parse error: unexpected token "'
            endif
            !inQuotes = true
        elseif !char inset(',', '}') then
            -- Decide value if key is already read and , or } comming
            if !key eq '' then
                break if !char eq '}'
                return error 4 'JSON parse error: unexpected token , or }'
            endif
            if !numbuf ne '' then
                !record.Set(!key, !numbuf)
            else
                !record.Set(!key, !strbuf)
            endif
            !key = ''
            !strbuf = ''
            !numbuf = ''
        elseif !char.IsDigits() or !char eq '.' then
            if !key eq '' or !strbuf ne '' then
                return error 5 'JSON parse error: unexpected number token'
            endif
            !numbuf = !numbuf + !char
        endif
        break if !char eq '}'
    enddo
    if not !inBraces then
        return error 1 'JSON parse error: unexpected end of string'
    endif
    return !record
endfunction
